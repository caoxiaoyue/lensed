language: c
matrix:
  include:
  - os: linux
    compiler: gcc
    env: OPENCL=opencl10
  - os: linux
    compiler: gcc
    env: OPENCL=opencl11
  - os: linux
    compiler: gcc
    env: OPENCL=opencl12 DEPLOY=true
  - os: linux
    compiler: gcc
    env: OPENCL=opencl20
  - os: linux
    compiler: gcc
    env: OPENCL=opencl21
  - os: osx
    compiler: clang
    env: DEPLOY=true
  - os: osx
    compiler: gcc
notifications:
  email: false
branches:
  only:
  - master
  - "/^v.*$/"
  - "/travis-.*/"
before_install:
- |
  if [ "$TRAVIS_OS_NAME" = "linux" ]; then
    sudo apt-get update -qq -y
    sudo apt-get install -qq -y gfortran libcfitsio3-dev
    pushd /tmp
    sudo install -d /usr/include/CL
    for header in cl cl_platform; do
      curl -LO https://github.com/KhronosGroup/OpenCL-Headers/raw/${OPENCL}/${header}.h
      sudo install ${header}.h /usr/include/CL
    done
    curl http://registrationcenter-download.intel.com/akdlm/irc_nas/9019/opencl_runtime_16.1.1_x64_ubuntu_6.4.0.25.tgz | tar xz
    cd opencl_runtime_*
    sed -i "s/ACCEPT_EULA=decline/ACCEPT_EULA=accept/g" silent.cfg
    sudo ./install.sh --silent silent.cfg
    popd
  fi
- |
  if [ "$TRAVIS_OS_NAME" = "osx" ]; then
    brew update
    brew tap homebrew/science
    brew install gcc cfitsio
  fi
- |
  pushd /tmp
  git clone git://github.com/JohannesBuchner/MultiNest.git
  cd MultiNest/build
  cmake .. -G "Unix Makefiles"
  make
  sudo make install
  if [ "$TRAVIS_OS_NAME" = "linux" ]; then
    sudo ldconfig
  fi
  popd
install:
- make
script:
- bin/lensed --version
- bin/lensed --devices
- make test
before_deploy:
- export RELEASE_VERSION=$(git describe --tags)
- export RELEASE_TAG=$TRAVIS_OS_NAME
- export RELEASE=build/lensed-$RELEASE_VERSION.$RELEASE_TAG.tar.gz
- |
  if [ "$TRAVIS_OS_NAME" = "linux" ]; then
    export CFITSIO_LIB="-l:libcfitsio.a"
    export EXTRA_LIBS="-lz -Wl,-rpath='$ORIGIN'"
  fi
- |
  if [ "$TRAVIS_OS_NAME" = "osx" ]; then
    export CFITSIO_LIB="/usr/local/lib/libcfitsio.a"
    export EXTRA_LIBS="-Wl,-rpath,@executable_path"
  fi
- |
  pushd /tmp
  cd MultiNest
  curl -L http://git.io/vkACf | patch -p1
  cd build
  cmake .. -DCMAKE_MACOSX_RPATH=ON
  make
  sudo make install
  if [ "$TRAVIS_OS_NAME" = "linux" ]; then
    sudo ldconfig
  fi
  popd
- |
  pushd /tmp
  curl -L https://github.com/ericmandel/xpa/archive/master.tar.gz | tar xz
  cd xpa-master
  ./configure --without-x --without-tcl
  make
  sudo make install
  popd
- |
  pushd /tmp
  curl -L https://github.com/ericmandel/regions/archive/master.tar.gz | tar xz
  cd regions-master
  ./configure
  make
  sudo make install
  popd
- make distclean
- make XPA=1 REGIONS=1
- make release
deploy:
  provider: releases
  api_key:
    secure: e8usjykFyRhRPd6cqt5x4VdIGi3j4mBwYfpUvvoKvlASQrBvoxodGyT7jHTlno2WN7aJuzUko5TaUWhbSj/MzZnltISbf/cRqd5qoeasUkQhNhIFUWFmH8nmUEP53Zk0dOEDUzjOEjVrUJ+s8+qboci6sgibdofvod5RqPPttagq26g26zWCj8GBZy1T8tppwXhprdzNCko4AwTehjCjqoUV64aMoP121o7F8yzrHnjCnnIZ6fzfpwuSVmg7XlDMHHnI43MvCCKzlCVQyLvpWWNigs5X9tJ7FVNOHiuTDwgaTCcEwUwTJKvE7wu8ficOC6j/mRohzdJG7zHTmFCZYDsUigs2UvH+Bph49/d6cJZaUO6yo0F38MDnXYnskxUUncO/4Fg+3a4ELYmtQGFGqjgobocWlK+GvH7zlNpFgl8h+3KLn9N3CzkwkF2SRQkqlm/tUnvjEO4fcMCbR4QxFwM9H1mj99SVp9AYBoyyYN2zJ2kb9QsYHHMMkRAMC4la99+JxvPVein/gYDz0kfhxipS78qUhJ0sjTq6Xs3sJhy2eshMCgufWDkeBsMde3uV0O3dA7RC5QkTVyIaG33QAEf9lzjtHJTJ+BOgPfZRYpmU+OmiO1TKxJI9xoDtl1ggnFzDSCkbwCTQyPQk1L/GobF+hOMyD8BgZ3WVKyJgqjE=
  file: ${RELEASE}
  skip_cleanup: true
  on:
    repo: glenco/lensed
    tags: true
    condition: $DEPLOY = true
